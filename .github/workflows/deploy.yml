name: Deploy AI Analytics App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest  # Ensure pytest is installed
    
    - name: Verify pytest installation
      run: |
        python -c "import pytest; print(f'pytest version: {pytest.__version__}')"
    
    - name: Check if tests exist
      run: |
        if [ -d "tests" ] && [ "$(ls -A tests)" ]; then
          echo "Tests directory exists and contains files"
          python -m pytest tests/ -v --tb=short
        else
          echo "No tests found, skipping test execution"
          echo "Creating basic test structure..."
          mkdir -p tests
          echo "Basic test structure created"
        fi
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        DEFAULT_AI_MODEL: ${{ secrets.DEFAULT_AI_MODEL }}
  
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        DEFAULT_AI_MODEL: ${{ secrets.DEFAULT_AI_MODEL }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        ENVIRONMENT: production
      run: |
        echo "Deploying with secure environment variables..."
        # Your deployment commands here
